version: '3'

services:
  traefik:
    image: traefik:v2.10
    ports:
      - "80:80" # The HTTP port
      - "8080:8080" # The Web UI
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock #listen to the Docker events


  patient_app:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./patient_app:/var/www/html/patient
    labels:
      - traefik.http.services.patient_app-service.loadbalancer.server.port=80
      - traefik.http.routers.patient_app.rule=(Host(`localhost`) && PathPrefix(`/patient/`))
      - traefik.http.routers.patient_app.entrypoints=web
      - traefik.http.services.patient_app-service.loadBalancer.sticky.cookie=true
    deploy:
      replicas: 3

  doctor_app:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./doctor_app:/var/www/html/doctor
    labels:
      - traefik.http.services.doctor_app-service.loadbalancer.server.port=80
      - traefik.http.routers.doctor_app.rule=(Host(`localhost`) && PathPrefix(`/doctor/`))
      - traefik.http.routers.doctor_app.entrypoints=web
      - traefik.http.services.doctor_app-service.loadBalancer.sticky.cookie=true
    deploy:
      replicas: 3

    
  postgresql-master:
    image: 'bitnami/postgresql:latest'
    ports:
      - '5432'
    volumes:
      - 'pg_master:/bitnami/postgresql'
      - ./sql_scripts:/docker-entrypoint-initdb.d
    
    labels:
      - traefik.tcp.routers.postgresql-master.rule=HostSNI(`*`)
      - traefik.tcp.routers.postgresql-master.priority=5
      - traefik.tcp.routers.postgresql-master.entrypoints=db

    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=admin
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_LOG_HOSTNAME=true
      - POSTGRESQL_DATABASE=db

  postgresql-slave:
    image: 'bitnami/postgresql:latest'
    ports:
      - '5432'
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_USERNAME=postgres
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
    labels:
      - traefik.tcp.routers.postgresql-slave.entrypoints=db
      - traefik.tcp.routers.postgresql-slave.rule=HostSNI(`*`)
      - traefik.tcp.routers.postgresql-slave.priority=1



  locust_master:
    image: locustio/locust
    labels:
      - traefik.enable=false
    ports:
     - "9089:8089"
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H http://traefik:80 -u 50 -r 50

  
  locust_worker:
    image: locustio/locust
    labels:
      - traefik.enable=false
    volumes:
      - ./:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host locust_master



volumes:
  pg_master:
